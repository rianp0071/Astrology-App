@page "/home"
@inject TokenStorageService TokenStorage
@inject NavigationManager Navigation
@inject GeminiService GeminiService
@using FrontEnd.Pages
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage

<h3>Home Page</h3>

@if (IsAuthenticated)
{

    <p>Welcome to your astrology app, @TokenStorage.GetUserEmail()!</p>
    <p>Save Data To View Compatibility With Other Users In The Users.</p>
    <button @onclick="LogoutAsync">Logout</button>

}
else
{
    <p>Login To Save Data And View Compatibility With Other Users.</p>
    <button @onclick="RedirectToLogin">Go to Login</button>
}

<!-- Add AI Component Here -->
<TestGemini />

@code {
    private bool IsAuthenticated => !string.IsNullOrEmpty(TokenStorage.GetToken());
    private const string BirthdayKey = "UserBirthday";
    private const string BirthTimeKey = "UserBirthTime";
    private const string BirthLocationKey = "UserBirthLocation";
    private const string UserInputKey = "UserInput";

    private void RedirectToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private async Task LogoutAsync()
    {
        try
        {
            await SessionStorage.RemoveItemAsync(BirthdayKey);
            await SessionStorage.RemoveItemAsync(BirthTimeKey);
            await SessionStorage.RemoveItemAsync(BirthLocationKey);
            await SessionStorage.RemoveItemAsync(UserInputKey);
            TokenStorage.ClearToken();
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during logout: {ex.Message}");
        }
    }
}
