@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation
@using AstrologyApp.Models

<div class="saturn saturn-2"></div>
<div class="saturn saturn-3"></div>

<section class="register-form"> 
    <div style="display: flex; flex-direction: column; gap: 1rem; max-width: 300px; margin: auto;">     
        <h3>Create a New Account</h3>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <label for="email" style="flex: 1;">Email:</label>
            <input type="email" id="email" @bind="Email" style="flex: 2;" />
        </div>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <label for="password" style="flex: 1;">Password:</label>
            <input type="password" id="password" @bind="Password" style="flex: 2;" />
        </div>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <label for="confirmPassword" style="flex: 1;">Confirm Password:</label>
            <input type="password" id="confirmPassword" @bind="ConfirmPassword" style="flex: 2;" />
        </div>
        <div>
            <button @onclick="RegisterUser">Register</button>
            <button @onclick="RedirectToLogin">Back to Login</button>
        </div>
        @if (!string.IsNullOrEmpty(Message))
        {
            <p>@Message</p>
        }
    </div>
</section>

@code {
    private string Email = string.Empty;
    private string Password = string.Empty;
    private string ConfirmPassword = string.Empty;
    private string Message = string.Empty;

    private async Task RegisterUser()
    {
        if (Password != ConfirmPassword)
        {
            Message = "Passwords do not match.";
            return;
        }

        try
        {
            var response = await Http.PostAsJsonAsync("http://localhost:5042/register", new { Email, Password });

            if (response.IsSuccessStatusCode)
            {
                Message = "Registration successful!";
                Navigation.NavigateTo($"/create-profile/{Email}");
            }
            else
            {
                var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                if (errorResponse != null && errorResponse.Errors != null)
                {
                    // Extract and join the error messages into a single string.
                    Message = string.Join(", ", errorResponse.Errors.SelectMany(e => e.Value));
                }
                else
                {
                    Message = "Registration failed. Please try again.";
                }
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }

    private void RedirectToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
