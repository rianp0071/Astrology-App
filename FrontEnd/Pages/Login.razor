@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject TokenStorageService TokenStorage

<div class="saturn saturn-2"></div>
<div class="saturn saturn-3"></div>

<section style="display: flex; flex-direction: row; gap: 2rem; max-width: 600px; margin: auto; align-items: center;">
    <!-- Login Section -->
    <div style="flex: 1; display: flex; flex-direction: column; gap: 1rem;">
        <h3>Login</h3>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <label for="username" style="flex: 1;">Email:</label>
            <input type="text" id="Email" @bind="Email" style="flex: 2;" />
        </div>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <label for="password" style="flex: 1;">Password:</label>
            <input type="password" id="password" @bind="Password" style="flex: 2;" />
        </div>
        <div>
            <button @onclick="LoginUser">Login</button>
        </div>
        @if (!string.IsNullOrEmpty(Message))
        {
            <p style="height: 1.5rem; overflow: hidden;">@Message</p>
        }
        else
        {
            <p style="height: 1.5rem;"></p> <!-- Placeholder to maintain spacing -->
        }
    </div>

    <!-- Register Section -->
    <div style="flex: 1; display: flex; flex-direction: column; align-items: center; gap: 1rem;">
        <p>Don't have an account?</p>
        <button @onclick="RedirectToRegister">Register</button>
    </div>
</section>


@code {
    private string Email = string.Empty;
    private string Password = string.Empty;
    private string Message = string.Empty;

    private async Task LoginUser()
    {
        try
        {
            // Check if the email exists
            var emailExistsResponse = await Http.GetAsync($"http://localhost:5042/users/{Email}");
            if (string.IsNullOrWhiteSpace(Email) || emailExistsResponse.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                Message = "Email not registered.";
                return; // Exit early if the email does not exist
            }

            // Proceed with login if email exists
            var loginResponse = await Http.PostAsJsonAsync("http://localhost:5042/login", new { Email, Password });

            if (loginResponse.IsSuccessStatusCode)
            {
                var token = await loginResponse.Content.ReadAsStringAsync();
                TokenStorage.SetToken(token, Email); // Store the token in the service

                Message = "Login successful!";
                Navigation.NavigateTo("/home"); // Redirect to the home page
            }
            else
            {
                Message = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            Message = $"Error: {ex.Message}";
        }
    }

    private void RedirectToRegister()
    {
        Navigation.NavigateTo("/register");
    }
}
